import{_ as a,c as i,ae as s,o as t}from"./chunks/framework.CYu0QblF.js";const h=JSON.parse('{"title":"Introdução","description":"","frontmatter":{"title":"Introdução"},"headers":[],"relativePath":"introducao.md","filePath":"introducao.md"}'),o={name:"introducao.md"};function r(n,e,l,d,c,u){return t(),i("div",null,e[0]||(e[0]=[s('<h1 id="webbookdigital-—-introducao" tabindex="-1">WebBookDigital — Introdução <a class="header-anchor" href="#webbookdigital-—-introducao" aria-label="Permalink to &quot;WebBookDigital — Introdução&quot;">​</a></h1><p>Projeto derivado de Book_Clusters_Liz_2024, desenvolvido para transformar um PDF em uma aplicação interativa com prateleira infinita.</p><h2 id="arquitetura-e-tech-stack" tabindex="-1">Arquitetura e tech stack <a class="header-anchor" href="#arquitetura-e-tech-stack" aria-label="Permalink to &quot;Arquitetura e tech stack&quot;">​</a></h2><ul><li>Frontend: Vue 3.5, Vite, Pinia, Vue Router</li><li>Backend: ExpressJS que serve JSON/MongoDB e atua como middleware para integrações (ex.: VTEX)</li></ul><h2 id="dependencias-principais" tabindex="-1">Dependências principais <a class="header-anchor" href="#dependencias-principais" aria-label="Permalink to &quot;Dependências principais&quot;">​</a></h2><ul><li>Babel, Axios, Bootstrap, ESLint, Prettier, Cypress, Vitest</li></ul><h2 id="requisitos" tabindex="-1">Requisitos <a class="header-anchor" href="#requisitos" aria-label="Permalink to &quot;Requisitos&quot;">​</a></h2><ul><li>Node.js v18+ recomendado</li></ul><p>Instalação:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h2 id="desenvolvimento" tabindex="-1">Desenvolvimento <a class="header-anchor" href="#desenvolvimento" aria-label="Permalink to &quot;Desenvolvimento&quot;">​</a></h2><ul><li>Rodar servidor de desenvolvimento (frontend):</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><ul><li>Build de produção (frontend):</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><ul><li>Docs (VitePress): <ul><li>Desenvolvimento: <code>npm run docs:dev</code></li><li>Build estático: <code>npm run docs:build</code></li></ul></li></ul><h2 id="arquivos-importantes" tabindex="-1">Arquivos importantes <a class="header-anchor" href="#arquivos-importantes" aria-label="Permalink to &quot;Arquivos importantes&quot;">​</a></h2><ul><li><code>src/main.js</code> — bootstrapping da aplicação Vue</li><li><code>src/stores/apiStore.js</code> — chamadas e processamentos de API</li><li><code>src/components/ItemCard.vue</code> — cartão de exibição de produto</li><li><code>src/views/InicioView.vue</code> — tela inicial e orquestração dos dados</li></ul><h2 id="observacoes" tabindex="-1">Observações <a class="header-anchor" href="#observacoes" aria-label="Permalink to &quot;Observações&quot;">​</a></h2><ul><li>Para produção, garanta que o backend (Express) esteja rodando e as integrações (VTEX) configuradas.</li><li>Considere usar armazenamento externo para imagens (S3/GridFS) se o volume for grande.</li></ul>',20)]))}const m=a(o,[["render",r]]);export{h as __pageData,m as default};

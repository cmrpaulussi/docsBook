import{_ as e,c as i,ae as o,o as s}from"./chunks/framework.C3n_qlVp.js";const m=JSON.parse('{"title":"WebBookDigital","description":"","frontmatter":{},"headers":[],"relativePath":"introducao.md","filePath":"introducao.md"}'),t={name:"introducao.md"};function r(n,a,d,p,c,l){return s(),i("div",null,a[0]||(a[0]=[o('<h1 id="webbookdigital" tabindex="-1">WebBookDigital <a class="header-anchor" href="#webbookdigital" aria-label="Permalink to &quot;WebBookDigital&quot;">​</a></h1><p>Este projeto foi com base Book_Clusters_Liz_2024, desenvolvido pela equipe interna de Marketing. O projeto foi desenvolvido em cima de um PDF, que foi transformado em uma aplicação interativa com links para prateleira infinita.</p><h3 id="arquitetura-e-techstack" tabindex="-1">Arquitetura e TechStack <a class="header-anchor" href="#arquitetura-e-techstack" aria-label="Permalink to &quot;Arquitetura e TechStack&quot;">​</a></h3><p>Este projeto foi desenvolvido com Vue 3.5, Pinia 2.2 e Vite, e seu backend em formato JSON, está rodando em ExpressJS.</p><h2 id="dependencias-e-libraries" tabindex="-1">Dependencias e Libraries <a class="header-anchor" href="#dependencias-e-libraries" aria-label="Permalink to &quot;Dependencias e Libraries&quot;">​</a></h2><p>Este projeto utiliza, além das tecnologias citadas acima:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Babel, Cypress, Prettier, Bootstrap (vanilla), ESLint, axios, vue-router 4, Underscore.</span></span></code></pre></div><p>E também seu servidor Express, que além de consumir o JSON e montar um api, também serve como middleware para consumir dados do CMS.</p><h2 id="requisitos-e-setup" tabindex="-1">Requisitos e Setup <a class="header-anchor" href="#requisitos-e-setup" aria-label="Permalink to &quot;Requisitos e Setup&quot;">​</a></h2><p>Primeiramente, este projeto idealmente utiliza NodeJs v18 ou maior. Caso queria, instale e utilize <code>nvm windows</code> para gerenciar as versões do node, <a href="https://github.com/coreybutler/nvm-windows" target="_blank" rel="noreferrer">https://github.com/coreybutler/nvm-windows</a></p><p>Com o NodeJs na versão correta instalado, rode:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm i</span></span></code></pre></div><h2 id="desenvolvimento" tabindex="-1">Desenvolvimento <a class="header-anchor" href="#desenvolvimento" aria-label="Permalink to &quot;Desenvolvimento&quot;">​</a></h2><p>Os principais arquivos dessa aplicação são:</p><h4 id="apistore-js-gerencia-chamadas-de-api-e-a-store-em-geral" tabindex="-1">apiStore.js - Gerencia chamadas de API e a store em geral; <a class="header-anchor" href="#apistore-js-gerencia-chamadas-de-api-e-a-store-em-geral" aria-label="Permalink to &quot;apiStore.js - Gerencia chamadas de API e a store em geral;&quot;">​</a></h4><h4 id="inicioview-vue-pagina-inicial-tambem-faz-as-requisicoes-dos-itens-da-api-no-servidor-no-mounted" tabindex="-1">inicioView.vue - Página inicial, também faz as requisições dos itens da api no servidor, no mounted(); <a class="header-anchor" href="#inicioview-vue-pagina-inicial-tambem-faz-as-requisicoes-dos-itens-da-api-no-servidor-no-mounted" aria-label="Permalink to &quot;inicioView.vue - Página inicial, também faz as requisições dos itens da api no servidor, no mounted();&quot;">​</a></h4><h4 id="itemcard-vue-componente-que-monta-os-cards-da-aplicacao-tambem-monta-os-links-para-prateleira-infinita" tabindex="-1">itemCard.vue - Componente que monta os cards da aplicação, também monta os links para prateleira infinita; <a class="header-anchor" href="#itemcard-vue-componente-que-monta-os-cards-da-aplicacao-tambem-monta-os-links-para-prateleira-infinita" aria-label="Permalink to &quot;itemCard.vue - Componente que monta os cards da aplicação, também monta os links para prateleira infinita;&quot;">​</a></h4><h4 id="pesquisa-vue-component-que-e-responsavel-por-todo-processo-de-pesquisa-da-aplicacao" tabindex="-1">Pesquisa.vue - Component que é responsável por todo processo de pesquisa da aplicação. <a class="header-anchor" href="#pesquisa-vue-component-que-e-responsavel-por-todo-processo-de-pesquisa-da-aplicacao" aria-label="Permalink to &quot;Pesquisa.vue - Component que é responsável por todo processo de pesquisa da aplicação.&quot;">​</a></h4><h4 id="main-js-importacoes-de-configuracoes-geral-da-aplicacao-vue" tabindex="-1">main.js - Importações de configurações geral da aplicação Vue. <a class="header-anchor" href="#main-js-importacoes-de-configuracoes-geral-da-aplicacao-vue" aria-label="Permalink to &quot;main.js - Importações de configurações geral da aplicação Vue.&quot;">​</a></h4><h2 id="rodando-dev-server" tabindex="-1">Rodando dev server <a class="header-anchor" href="#rodando-dev-server" aria-label="Permalink to &quot;Rodando dev server&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><h2 id="compilacao-e-minificacao-de-arquivos" tabindex="-1">Compilação e minificação de arquivos <a class="header-anchor" href="#compilacao-e-minificacao-de-arquivos" aria-label="Permalink to &quot;Compilação e minificação de arquivos&quot;">​</a></h2><p>Primeiramente, faça uma limpeza de cache no seu gerenciador de pacotes <code>npm cache clean --force </code></p><p>Também tenha certeza que seu servidor Express esteja rodando e ativo:</p><p>Após isso, rode:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div>',26)]))}const h=e(t,[["render",r]]);export{m as __pageData,h as default};

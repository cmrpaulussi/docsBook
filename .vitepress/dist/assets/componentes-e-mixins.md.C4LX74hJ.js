import{_ as a,c as o,ae as t,o as r}from"./chunks/framework.C3n_qlVp.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{"0":"C","1":"o","2":"m","3":"p","4":"o","5":"n","6":"e","7":"n","8":"t","9":"e","10":"s","11":" ","12":"e","13":" ","14":"M","15":"i","16":"x","17":"i","18":"n","19":"s"},"headers":[],"relativePath":"componentes-e-mixins.md","filePath":"componentes-e-mixins.md"}'),i={name:"componentes-e-mixins.md"};function n(d,e,s,c,m,l){return r(),o("div",null,e[0]||(e[0]=[t(`<h3 id="getimgmixin" tabindex="-1">GetImgMixin <a class="header-anchor" href="#getimgmixin" aria-label="Permalink to &quot;GetImgMixin&quot;">​</a></h3><pre><code>Componente utilizado como ferramenta para retornar imagens direto do MongoDB, um vez que, todas as imagens sejam portadas para lá como base64.
</code></pre><h3 id="header" tabindex="-1">Header <a class="header-anchor" href="#header" aria-label="Permalink to &quot;Header&quot;">​</a></h3><pre><code>Componente Header contem apenas os estilos de cabeçalho e o router-link para navegação entre páginas;
</code></pre><h3 id="footer" tabindex="-1">Footer <a class="header-anchor" href="#footer" aria-label="Permalink to &quot;Footer&quot;">​</a></h3><pre><code>Componente que contém o rodape com estilos e versão do sistema
</code></pre><h3 id="logindetails" tabindex="-1">LoginDetails <a class="header-anchor" href="#logindetails" aria-label="Permalink to &quot;LoginDetails&quot;">​</a></h3><pre><code>Componente que carrega as informações de login, botão de sair e botão para página CRUD.
Utilizada normalmente na parte superior direita da aplicação, mostrando as informações de login
</code></pre><h3 id="itemcard" tabindex="-1">ItemCard <a class="header-anchor" href="#itemcard" aria-label="Permalink to &quot;ItemCard&quot;">​</a></h3><pre><code>Componente de card utilizado em toda aplicação para mostrar os produtos.
Contém todo código, links e lógica para mostrar produtos, em cards, independente de sua categoria.
Também contém a chamada de API que solicita, junto a linx, a disponibilidade do produto, caso um usuario de LOJA esteja logado.
</code></pre><h3 id="chatbot" tabindex="-1">ChatBot <a class="header-anchor" href="#chatbot" aria-label="Permalink to &quot;ChatBot&quot;">​</a></h3><pre><code>Contém o componente de pesquisa/query para a IA, que utiliza o contexto do próprio book para segurar uma resposta assertiva.
</code></pre><h3 id="pesquisa" tabindex="-1">Pesquisa <a class="header-anchor" href="#pesquisa" aria-label="Permalink to &quot;Pesquisa&quot;">​</a></h3><pre><code>Componente utilizado em toda aplicação, para filtrar dados e mostrar de acordo com a pesquisa.
Cada estilo de filtro é um função/lógica dentro desde componente. Ex: filtro por cor ou combinado.
</code></pre>`,14)]))}const h=a(i,[["render",n]]);export{u as __pageData,h as default};
